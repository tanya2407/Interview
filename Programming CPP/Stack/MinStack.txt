struct Node{
 int val;
 int minval;
 Node *next;

 Node(int x) : val(x),minval(x),next(nullptr){}
};

class MinStack {
private:
    Node *head;
public:
    MinStack() {
        head = nullptr;
    }
    
    void push(int val) {
        Node *newnode = new Node(val);
        if(head == nullptr){
            head = newnode;
        } else{
            newnode->minval = min(newnode->minval,head->minval);
            newnode->next = head;
            head = newnode;
        }
    }
    
    void pop() {
        if(head == nullptr){
            return;
        }
        head = head->next;
    }
    
    int top() {
        return head->val;
    }
    
    int getMin() {
        return head->minval;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
